@model IEnumerable<TreinamentoWeb1.Models.Entity.branches>
@{
    ViewBag.Title = "Index";
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Braços</title>
</head>
<body>
    <h2>Braços</h2>
    <br>
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">Filtros</h3>
        </div>
        <div class="panel-body">
            @using (Html.BeginForm("Index", "Branches", FormMethod.Post, new { @class = "form-inline" }))
            {
                @Html.AntiForgeryToken()

                <div class="row">
                    <div class="form-group col-md-4">
                        <label class="control-label col-md-4" for="filter-name">Nome:</label>
                        <div class="col-md-9">
                            @Html.TextBox("name", string.Empty, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        <label class="control-label col-md-4" for="filter-responsible">Descrição:</label>
                        <div class="col-md-9">
                            @Html.TextBox("description", string.Empty, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-4">
                        <label class="control-label col-md-4" for="filter-type">Tipo:</label>
                        <div class="col-md-9">
                            @Html.TextBox("type", string.Empty, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        <label class="control-label col-md-4" for="filter-product">Produto:</label>
                        <div class="col-md-9">
                            @Html.TextBox("product", string.Empty, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 text-right">
                        <button id="filtrar" type="submit" class="btn btn-default btn-sm" data-toggle="tooltip" data-placement="left"
                                title="Filtrar">
                            <span class="glyphicon glyphicon-filter"></span>
                        </button>
                        <a id="limpar" class="btn btn-default btn-sm" data-toggle="tooltip" data-placement="left"
                           title="Limpar" href="@Url.Action("Index")">
                            <span class="glyphicon glyphicon-refresh"></span>
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
    <p>
        @Html.ActionLink("Novo Braço", "Create", "Create", new { @class = "btn btn-success pull-right" })
    </p>
    <br>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.merge_executed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.parent_branch)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.product)
            </th>
            <th></th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.description)
                </td>
                <td>
                    @(item.merge_executed ? Html.Raw("<span class='label label-success'>" + Resources.Strings.yes + "</span>")
                                          : Html.Raw("<span class='label label-danger'>" + Resources.Strings.no + "</span>"))
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.parent_branch)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.product)
                </td>
                <td>
                    <a id="editar" class="btn btn-default btn-sm" data-toggle="tooltip" data-placement="left"
                       title="Limpar" href="@Url.Action("Edit", "Branches", new { id = item.id })">
                        <span class="glyphicon glyphicon-edit"></span>
                    </a>
                    <a id="visualizar" class="btn btn-default btn-sm" data-toggle="tooltip" data-placement="left"
                       title="Limpar" href="@Url.Action("Details", "Branches", new { id = item.id })">
                        <span class="glyphicon glyphicon-eye-open"></span>
                    </a>
                    <a id="excluir" class="btn btn-default btn-sm" data-toggle="tooltip" data-placement="left"
                       title="Limpar" href="@Url.Action("Delete", "Branches", new { id = item.id })">
                        <span class="glyphicon glyphicon-trash"></span>
                    </a>
                </td>
            </tr>
        }
    </table>
    <nav aria-label="Navegação de página">
        <ul class="pagination">
            <li class="page-item">
                @Html.ActionLink("<", "Index", "Branches", new { page = (@ViewBag.Page - 1 <= 0 ? 1 : @ViewBag.Page - 1), name = @ViewBag.name, product = @ViewBag.product, type = ViewBag.type }, null)
            </li>
            <li class="active"><a class="page-number">@ViewBag.Page</a></li>
            <li class="page-item">
                @Html.ActionLink(">", "Index", "Branches", new { page = (@ViewBag.Page + 1 > Math.Ceiling((decimal)@ViewBag.Count / 10) ? @ViewBag.Page : @ViewBag.Page + 1), name = @ViewBag.name, product = @ViewBag.product, type = ViewBag.type }, null)
            </li>
        </ul>
    </nav>
</body>
</html>
